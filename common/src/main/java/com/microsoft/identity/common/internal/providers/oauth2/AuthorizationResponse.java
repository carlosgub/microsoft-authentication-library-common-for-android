package com.microsoft.identity.common.internal.providers.oauth2;

/**
 * This is the class encapsulating the details of the Authorization Response (oAuth2/OIDC)
 * https://tools.ietf.org/html/rfc6749#section-4.1.2
 * It should include all of the required and optional parameters based on the protocol and
 * support an extension to allow the authorization server / openid provider to send back additional information
 */
public class AuthorizationResponse {

    /**
     * REQUIRED. The authorization code generated by the
     * authorization server. The authorization code MUST expire
     * shortly after it is issued to mitigate the risk of leaks.  A
     * maximum authorization code lifetime of 10 minutes is
     * RECOMMENDED. The client MUST NOT use the authorization code more than once.  If an authorization code is used more than
     * once, the authorization server MUST deny the request and SHOULD
     * revoke (when possible) all tokens previously issued based on
     * that authorization code. The authorization code is bound to
     * the client identifier and redirection URI.
     */
    protected String mCode;

    /**
     * REQUIRED if the "state" parameter was present in the client
     * authorization request.  The exact value received from the
     * client.
     */
    protected String mState;

    AuthorizationResponse(final String code, final String state) {
        mCode = code;
        mState = state;
    }

    /**
     * Gets the responses code.
     *
     * @return The code to get.
     */
    public String getCode() {
        return mCode;
    }

    /**
     * Sets the response code.
     *
     * @param code The code to set.
     */
    public void setCode(String code) {
        this.mCode = code;
    }

    /**
     * Gets the response state.
     *
     * @return The state to get.
     */
    public String getState() {
        return mState;
    }

    /**
     * Sets the response state.
     *
     * @param state The state to set.
     */
    public void setState(String state) {
        this.mState = state;
    }
}
